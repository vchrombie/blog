{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-grimoirelab-with-opensearch-index-mdx-e5e65b47febbc48ac700.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,SAAU,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,qLAAsL,KAAMQ,EAAAA,cAAoBX,EAAYI,GAAI,KAAM,cAAe,KAAMO,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,+kBAAglB,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,eAAgB,KAAMQ,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,KAAMM,EAAAA,cAAoBX,EAAYM,GAAI,KAAMK,EAAAA,cAAoBX,EAAYO,EAAG,CACvsCK,KAAM,8FACL,sDAAuD,KAAMD,EAAAA,cAAoBX,EAAYM,GAAI,KAAMK,EAAAA,cAAoBX,EAAYO,EAAG,CAC3IK,KAAM,mEACL,2BAA4B,MAAO,KAAMD,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoBX,EAAYO,EAAG,CACtHK,KAAM,2BACL,cAAe,0VAA2V,KAAMD,EAAAA,cAAoBX,EAAYI,GAAI,KAAM,eAAgB,KAAMO,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoBX,EAAYO,EAAG,CAC7fK,KAAM,yCACL,eAAgB,wiBAAyiB,KAAMD,EAAAA,cAAoBX,EAAYI,GAAI,KAAM,4CAA6C,KAAMO,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,urBAAwrB,KAAMQ,EAAAA,cAAoBX,EAAYI,GAAI,KAAM,+BAAgC,KAAMO,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoBX,EAAYO,EAAG,CAChiDK,KAAM,8BACL,QAAS,8GAA+GD,EAAAA,cAAoBX,EAAYO,EAAG,CAC5JK,KAAM,mDACL,iCAAkC,KAAM,KAAMD,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,wGAAyG,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,oDAAqD,KAAMQ,EAAAA,cAAoBX,EAAYQ,GAAI,KAAM,KAAMG,EAAAA,cAAoBX,EAAYM,GAAI,KAAM,KAAMK,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,sHAAuHQ,EAAAA,cAAoBX,EAAYO,EAAG,CAC9kBK,KAAM,yCACL,wBAAyB,UAAW,MAAO,KAAMD,EAAAA,cAAoBX,EAAYM,GAAI,KAAM,KAAMK,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,iFAAkF,MAAO,MAAO,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,sBAC9R,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWf,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UC3Be,SAASgB,EAAiBhB,GACvC,OAAOY,EAAAA,cAAoBK,EAAAA,EAAejB,EAAOY,EAAAA,cAAoBM,EAAqBlB,GAC5F,CAHAiB,EAAAA,C","sources":["webpack://minimal-blog/./content/posts/grimoirelab-with-opensearch/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Hola!\"), \"\\n\", React.createElement(_components.p, null, \"In this blog post, I will be discussing how to use GrimoireLab with OpenSearch. Before going into the details, let me briefly explain what they are and the purpose of this post.\"), \"\\n\", React.createElement(_components.h3, null, \"OpenSearch\"), \"\\n\", React.createElement(_components.p, null, \"During the start of 2021, Elastic announced they will change their software licensing strategy, and will not release new versions of Elasticsearch and Kibana under the ALv2. Instead, new versions of the software will be offered under the Elastic License or the SSPL. This means that Elasticsearch and Kibana will no longer be open source software. In order to ensure open source versions of both packages remain available and well supported, AWS announced to create and maintain a ALv2-licensed fork of open source Elasticsearch and Kibana. This project was introduced as the OpenSearch.\"), \"\\n\", React.createElement(_components.p, null, \"References:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://aws.amazon.com/blogs/opensource/stepping-up-for-a-truly-open-source-elasticsearch/\"\n  }, \"Stepping up for a truly open source Elasticsearch\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://aws.amazon.com/blogs/opensource/introducing-opensearch/\"\n  }, \"Introducing OpenSearch\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://opensearch.net/\"\n  }, \"OpenSearch\"), \" is a community-driven, open source search and analytics suite derived from Apache 2.0 licensed Elasticsearch 7.10.2 & Kibana 7.10.2. It consists of a search engine daemon, OpenSearch, and a visualization and user interface, OpenSearch Dashboards. OpenSearch enables people to easily ingest, secure, search, aggregate, view, and analyze data.\"), \"\\n\", React.createElement(_components.h3, null, \"GrimoireLab\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://chaoss.github.io/grimoirelab/\"\n  }, \"GrimoireLab\"), \" is a set of free, open source software tools for software development analytics. They gather data from several platforms involved in software development (Git, GitHub, Jira, Bugzilla, Gerrit, Mailing lists, Jenkins, Slack, Discourse, Confluence, StackOverflow, and more), merge and organize it in a database, and produce visualizations, actionable dashboards, and analytics of all of it. GrimoireLab is focused on analyzing activity, community, and processes. Nonetheless, it can be easily tailored for other aims, and integrated with other tools.\"), \"\\n\", React.createElement(_components.h3, null, \"How GrimoireLab is related to OpenSearch\"), \"\\n\", React.createElement(_components.p, null, \"GrimoireLab uses Elasticsearch as the database to store the raw & enriched data collected from different data sources. Also, Kibiter which is a component of GrimoireLab is a custom fork of Kibana. Kibiter is used to work on new ideas for metrics & data visualization to be used by GrimoireLab Panels. The current version of GrimoireLab supports the Elasticsearch 6.8.6 version and we were working on supporting the next 7.x.x versio. Due to the license change announced by the Elastic, GrimoireLab is affected directly as it cannot use the latest versions of Elasticsearch and Kibana. So, OpenSearch announcement was a sight of relief and we decided to replace Elasticsearch with OpenSearch.\"), \"\\n\", React.createElement(_components.h3, null, \"GrimoireLab with OpenSearch\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/zhquan/\"\n  }, \"Quan\"), \" has worked on GrimoireLab to support Elasticsearch and Kibana 7.10 as we were planning to add support for \", React.createElement(_components.a, {\n    href: \"https://opendistro.github.io/for-elasticsearch/\"\n  }, \"Open Distro for Elasticsearch\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"So, the work is now much simpler as OpenSearch is forked from Elasticsearch & Kibana 7.10.2 version.\"), \"\\n\", React.createElement(_components.p, null, \"Steps to get GrimoireLab running with OpenSearch\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Get the OpenSearch and OpenSearch Dashboards running using the docker-compose. You can find more about it from the \", React.createElement(_components.a, {\n    href: \"https://opensearch.net/downloads.html\"\n  }, \"OpenSearch Downloads\"), \" page.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Setup GrimoireLab using the source code method since we are going to use some\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"To be continued...\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/p0tt3r/dev/vchrombie/blog/content/posts/grimoirelab-with-opensearch/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h3","ul","li","a","ol","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}