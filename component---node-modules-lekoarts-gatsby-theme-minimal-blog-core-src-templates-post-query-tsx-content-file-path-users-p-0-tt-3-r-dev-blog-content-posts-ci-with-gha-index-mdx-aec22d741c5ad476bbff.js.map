{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-users-p-0-tt-3-r-dev-blog-content-posts-ci-with-gha-index-mdx-aec22d741c5ad476bbff.js","mappings":"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","sources":["webpack://minimal-blog/./content/posts/ci-with-gha/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"It all started with a big announcement made by the Travis CI team about their change in their pricing model. You can read about it from here, \", React.createElement(_components.a, {\n    href: \"https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing\"\n  }, \"The new pricing model for travis-ci.com\"), \". It made us think about the other options we have now, \", React.createElement(_components.a, {\n    href: \"https://github.com/chaoss/grimoirelab/issues/400\"\n  }, \"discussion\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"As \", React.createElement(_components.a, {\n    href: \"https://github.com/ElizabethN\"\n  }, \"@ElizabethN\"), \" quotes\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"It looks like we will either have to bite the bullet and migrate to GitHub Actions or bite a bigger one and move the whole org to GitLab & GitLab CI.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"We had a few options, so I talked to \", React.createElement(_components.a, {\n    href: \"https://github.com/sduenas\"\n  }, \"@sduenas\"), \" about it, and we decided to try GitHub Actions to see how it works. I worked on creating a GHA for the toolkit and perceval. I referred to the \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/en/actions\"\n  }, \"GitHub Actions Documentation\"), \" and observed a few things.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"the syntax is almost similar to that of travis solutions\"), \"\\n\", React.createElement(_components.li, null, \"travis had a few things pre-configured in the systems, but in github actions, you need to configure them\"), \"\\n\", React.createElement(_components.li, null, \"the documentation is  good, and it was so much of help\"), \"\\n\", React.createElement(_components.li, null, \"it has an actively growing community around it, with forums asking and answering questions\"), \"\\n\", React.createElement(_components.li, null, \"the UI wasn't impressive (but they have updated it during GitHub Universe, and it looks super now)\"), \"\\n\", React.createElement(_components.li, null, \"github actions is super fast than travis.org (maybe because travis.org started throttling performance since it will be shutting down soon)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"It was simple. I was able to create a workflow for the toolkit at the very first attempt. The main challenge is, there are a few tools in the GrimoireLab toolset that require services like mysql, elasticsearch, etc. The documentation and a few other built-in actions have come to the rescue.\"), \"\\n\", React.createElement(_components.p, null, \"I will share some different services which we had to use.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"MySQL - services in GitHub Actions\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"\\n    services:\\n      # How to use MySQL\\n      mysql:\\n        image: mysql:5.7\\n        env:\\n          MYSQL_ROOT_PASSWORD: root\\n        ports:\\n          - 3306:3306\\n        options: --health-cmd=\\\"mysqladmin ping\\\" --health-interval=10s --health-timeout=5s --health-retries=3\\n    \\n    steps:\\n  \\t...\\n    - name: Verify MySQL connection\\n      run: |\\n        sudo apt-get install -y mysql-client libmysqlclient-dev\\n        mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e \\\"SHOW GRANTS FOR 'root'@'localhost'\\\"\\n        mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot mysql\\n    \\n    - name: Setup MySQL Database\\n      env:\\n        DB_HOST: 127.0.0.1\\n        DB_PORT: ${{ job.services.mysql.ports[3306] }}\\n      run: |\\n        mysql --host $DB_HOST --port $DB_PORT -uroot -proot -e \\\"SHOW DATABASES\\\"\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Elasticsearch - \", React.createElement(_components.a, {\n    href: \"https://github.com/elastic/elastic-github-actions\"\n  }, \"elastic/elastic-github-actions\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"    \\n    strategy:\\n      matrix:\\n        elasticsearch-version: [6.1.0, 7.2.0]\\n    \\n    steps:\\n \\t...\\n    - name: Configure sysctl limits\\n      run: |\\n        sudo swapoff -a\\n        sudo sysctl -w vm.swappiness=1\\n        sudo sysctl -w fs.file-max=262144\\n        sudo sysctl -w vm.max_map_count=262144\\n      \\n    - name: Runs Elasticsearch ${{ matrix.elasticsearch-version }}\\n      uses: elastic/elastic-github-actions/elasticsearch@master\\n      with:\\n        stack-version: ${{ matrix.elasticsearch-version }}\\n      \\n    - name: Verify Elasticsearch connection\\n      run: |\\n        curl -fsSL \\\"http://localhost:9200/_cat/health?h=status\\\"\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Coveralls - \", React.createElement(_components.a, {\n    href: \"https://github.com/TheKevJames/coveralls-python\"\n  }, \"TheKevJames/coveralls-python\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"    \\n    steps:\\n  \\t...\\n      - name: Install dependencies\\n        run: pip install coveralls\\n      \\n      - name: Tests and Coverage\\n        env:\\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\\n        run: |\\n          cd tests\\n          coverage run --source=grimoirelab_toolkit run_tests.py\\n          # --service=github is a workaround for bug\\n          # https://github.com/coveralls-clients/coveralls-python/issues/251\\n          coveralls --service=github\\n\")), \"\\n\", React.createElement(_components.p, null, \"The coveralls gave several errors without the flag \", React.createElement(_components.code, null, \"--service=github\"), \". I found a workaround with the help of the community.\"), \"\\n\", React.createElement(_components.p, null, \"I faced some other challenges too, which are mostly configuration issues with the database and the tools. It exposed some loopholes in the documentation of the GrimoireLab project. I spent almost two weeks scratching my head to fix such configuration issues in \", React.createElement(_components.a, {\n    href: \"https://github.com/chaoss/grimoirelab-elk\"\n  }, \"ELK\"), \", but \", React.createElement(_components.a, {\n    href: \"https://github.com/mafesan\"\n  }, \"@mafesan\"), \" helped me fix them.\"), \"\\n\", React.createElement(_components.p, null, \"I worked on all the components, porting the CI and fixing any issues with the tests like flake8 errors and incomplete configurations in the repository. Within a few weeks, we completed the job and ported all the repositories from Travis CI to GHA. You can find the issue from here, \", React.createElement(_components.a, {\n    href: \"https://github.com/chaoss/grimoirelab/issues/405\"\n  }, \"chaoss/grimoirelab#405\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"The next comes the Continuous Deployment with GitHub Actions. 👋\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/p0tt3r/dev/blog/content/posts/ci-with-gha/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","blockquote","ul","li","pre","code","_provideComponents","components","React","href","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}