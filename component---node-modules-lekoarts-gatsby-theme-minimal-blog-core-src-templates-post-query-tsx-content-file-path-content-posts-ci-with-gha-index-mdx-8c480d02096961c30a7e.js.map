{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-ci-with-gha-index-mdx-8c480d02096961c30a7e.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/ci-with-gha/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"It all started with a big announcement made by the Travis CI team about their change in their pricing model. You can read about it from here, \", React.createElement(_components.a, {\n    href: \"https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing\"\n  }, \"The new pricing model for travis-ci.com\"), \". It made us think about the other options we have now, \", React.createElement(_components.a, {\n    href: \"https://github.com/chaoss/grimoirelab/issues/400\"\n  }, \"discussion\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"As \", React.createElement(_components.a, {\n    href: \"https://github.com/ElizabethN\"\n  }, \"@ElizabethN\"), \" quotes\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"It looks like we will either have to bite the bullet and migrate to GitHub Actions or bite a bigger one and move the whole org to GitLab & GitLab CI.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"We had a few options, so I talked to \", React.createElement(_components.a, {\n    href: \"https://github.com/sduenas\"\n  }, \"@sduenas\"), \" about it, and we decided to try GitHub Actions to see how it works. I worked on creating a GHA for the toolkit and perceval. I referred to the \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/en/actions\"\n  }, \"GitHub Actions Documentation\"), \" and observed a few things.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"the syntax is almost similar to that of travis solutions\"), \"\\n\", React.createElement(_components.li, null, \"travis had a few things pre-configured in the systems, but in github actions, you need to configure them\"), \"\\n\", React.createElement(_components.li, null, \"the documentation is  good, and it was so much of help\"), \"\\n\", React.createElement(_components.li, null, \"it has an actively growing community around it, with forums asking and answering questions\"), \"\\n\", React.createElement(_components.li, null, \"the UI wasn't impressive (but they have updated it during GitHub Universe, and it looks super now)\"), \"\\n\", React.createElement(_components.li, null, \"github actions is super fast than travis.org (maybe because travis.org started throttling performance since it will be shutting down soon)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"It was simple. I was able to create a workflow for the toolkit at the very first attempt. The main challenge is, there are a few tools in the GrimoireLab toolset that require services like mysql, elasticsearch, etc. The documentation and a few other built-in actions have come to the rescue.\"), \"\\n\", React.createElement(_components.p, null, \"I will share some different services which we had to use.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"MySQL - services in GitHub Actions\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"\\n    services:\\n      # How to use MySQL\\n      mysql:\\n        image: mysql:5.7\\n        env:\\n          MYSQL_ROOT_PASSWORD: root\\n        ports:\\n          - 3306:3306\\n        options: --health-cmd=\\\"mysqladmin ping\\\" --health-interval=10s --health-timeout=5s --health-retries=3\\n    \\n    steps:\\n  \\t...\\n    - name: Verify MySQL connection\\n      run: |\\n        sudo apt-get install -y mysql-client libmysqlclient-dev\\n        mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e \\\"SHOW GRANTS FOR 'root'@'localhost'\\\"\\n        mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot mysql\\n    \\n    - name: Setup MySQL Database\\n      env:\\n        DB_HOST: 127.0.0.1\\n        DB_PORT: ${{ job.services.mysql.ports[3306] }}\\n      run: |\\n        mysql --host $DB_HOST --port $DB_PORT -uroot -proot -e \\\"SHOW DATABASES\\\"\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Elasticsearch - \", React.createElement(_components.a, {\n    href: \"https://github.com/elastic/elastic-github-actions\"\n  }, \"elastic/elastic-github-actions\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"    \\n    strategy:\\n      matrix:\\n        elasticsearch-version: [6.1.0, 7.2.0]\\n    \\n    steps:\\n \\t...\\n    - name: Configure sysctl limits\\n      run: |\\n        sudo swapoff -a\\n        sudo sysctl -w vm.swappiness=1\\n        sudo sysctl -w fs.file-max=262144\\n        sudo sysctl -w vm.max_map_count=262144\\n      \\n    - name: Runs Elasticsearch ${{ matrix.elasticsearch-version }}\\n      uses: elastic/elastic-github-actions/elasticsearch@master\\n      with:\\n        stack-version: ${{ matrix.elasticsearch-version }}\\n      \\n    - name: Verify Elasticsearch connection\\n      run: |\\n        curl -fsSL \\\"http://localhost:9200/_cat/health?h=status\\\"\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Coveralls - \", React.createElement(_components.a, {\n    href: \"https://github.com/TheKevJames/coveralls-python\"\n  }, \"TheKevJames/coveralls-python\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"    \\n    steps:\\n  \\t...\\n      - name: Install dependencies\\n        run: pip install coveralls\\n      \\n      - name: Tests and Coverage\\n        env:\\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\\n        run: |\\n          cd tests\\n          coverage run --source=grimoirelab_toolkit run_tests.py\\n          # --service=github is a workaround for bug\\n          # https://github.com/coveralls-clients/coveralls-python/issues/251\\n          coveralls --service=github\\n\")), \"\\n\", React.createElement(_components.p, null, \"The coveralls gave several errors without the flag \", React.createElement(_components.code, null, \"--service=github\"), \". I found a workaround with the help of the community.\"), \"\\n\", React.createElement(_components.p, null, \"I faced some other challenges too, which are mostly configuration issues with the database and the tools. It exposed some loopholes in the documentation of the GrimoireLab project. I spent almost two weeks scratching my head to fix such configuration issues in \", React.createElement(_components.a, {\n    href: \"https://github.com/chaoss/grimoirelab-elk\"\n  }, \"ELK\"), \", but \", React.createElement(_components.a, {\n    href: \"https://github.com/mafesan\"\n  }, \"@mafesan\"), \" helped me fix them.\"), \"\\n\", React.createElement(_components.p, null, \"I worked on all the components, porting the CI and fixing any issues with the tests like flake8 errors and incomplete configurations in the repository. Within a few weeks, we completed the job and ported all the repositories from Travis CI to GHA. You can find the issue from here, \", React.createElement(_components.a, {\n    href: \"https://github.com/chaoss/grimoirelab/issues/405\"\n  }, \"chaoss/grimoirelab#405\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"The next comes the Continuous Deployment with GitHub Actions. 👋\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/p0tt3r/dev/vchrombie/blog/content/posts/ci-with-gha/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","p","blockquote","ul","li","pre","code","_provideComponents","components","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}